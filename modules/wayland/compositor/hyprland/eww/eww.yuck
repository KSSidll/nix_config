(defvar workspace_size 30)

(defwindow topbar
    :monitor 0
    :stacking "bottom"
    :exclusive true
    :focusable false
    :namespace "topbar"
    :geometry (geometry
        :width "100%"
        :anchor "top center")
    (topbar_layout))

(defpoll time :interval "1s"
    :initial '{"day":"0","month":"0","year":"0","hour":"0","min":"0", "sec":"0"}'
    `date +'{"day":"%d","month":"%m","year":"%Y","hour":"%H","min":"%M", "sec":"%S"}'`)

(deflisten hyprland_workspaces 
    :initial "[]"
    `~/.config/eww/scripts/hyprland-listen-workspaces.sh`)

(deflisten hyprland_active_workspace
    :initial '{"id": 1}'
    `~/.config/eww/scripts/hyprland-listen-active-workspace.sh`)

(defwidget time_widget []
    (box :class "time"
        "${time.hour}:${time.min}:${time.sec}"))

(defwidget date_widget []
    (box :class "date"
        "${time.day}.${time.month}.${time.year}"))

(defwidget datetime_layout []
    (box :class "datetime-layout-box"
        :orientation "vertical"
        (time_widget)
        (date_widget)))

(defwidget workspace_widget [active]
    (box :class {active ? "workspace workspace-active" : "workspace"}
        :width workspace_size
        :height workspace_size
        :valign "center"))

(defwidget workspace_layout_widget []
    (box :class "workspace-layout-box"
        :orientation "horizontal"
        (for workspace in hyprland_workspaces
            (workspace_widget 
                :active {workspace.id == hyprland_active_workspace.id}))))

(defwidget spacer [?width ?height]
    (box :class "spacer"
        :width {width ?: 0}
        :height {height ?: 0}
        :hexpand {width == ''}
        :vexpand {height == ''}))

(defwidget topbar_layout_start []
    (box :class "topbar-layout-left-box"
        :orientation "horizontal"
        :space-evenly false
        (spacer :width 5)
        "${hyprland_active_workspace.id}"
        (spacer :width 5)
        (workspace_layout_widget)
    ))

(defwidget topbar_layout_center []
    (box :class "topbar-layout-center-box"
        :orientation "horizontal"
        :space-evenly false
    ))

(defwidget topbar_layout_end []
    (box :class "topbar-layout-end-box"
        :orientation "horizontal"
        :space-evenly false
        (spacer)
        (datetime_layout)
        (spacer :width 5)
        (button :onclick "eww close topbar")
    ))

(defwidget topbar_layout []
    (centerbox :class "topbar-layout-box"
        :orientation "horizontal"
        :space-evenly false
        (topbar_layout_start)
        (topbar_layout_center)
        (topbar_layout_end)))
